nextflow_process {

    name "Test Process LOAD_USER_METADATA"
    script "../main.nf"
    process "LOAD_USER_METADATA"

    test("Load in xlsx") {

        when {
            process {
                """
                input[0] = file("$baseDir" + "/" + params.modules_testdata_base_path_local + "metadata_template_ERC000011_TRX.xlsx", checkIfExists: true)
                input[1] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Load in xlsx meta") {

        when {
            process {
                """
                input[0] = file("$baseDir" + "/" + params.modules_testdata_base_path_local + "metadata_template_ERC000011_TRX_Meta.xlsx", checkIfExists: true)
                input[1] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Load in TSV set") {

        when {
            process {
                """
                ch_tsv = Channel.fromPath( ["$baseDir" + "/" + params.modules_testdata_base_path_local + "study.tsv",
                                            "$baseDir" + "/" + params.modules_testdata_base_path_local + "experiment.tsv",
                                            "$baseDir" + "/" + params.modules_testdata_base_path_local + "sample.tsv",
                                            "$baseDir" + "/" + params.modules_testdata_base_path_local + "run.tsv"] )
                input[0] = ch_tsv.collect()
                input[1] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Load in TSV set no metadata") {

        when {
            process {
                """
                ch_tsv = Channel.fromPath( ["$baseDir" + "/" + params.modules_testdata_base_path_local + "load_user_metadata/study.tsv",
                                            "$baseDir" + "/" + params.modules_testdata_base_path_local + "load_user_metadata/experiment.tsv",
                                            "$baseDir" + "/" + params.modules_testdata_base_path_local + "load_user_metadata/sample.tsv",
                                            "$baseDir" + "/" + params.modules_testdata_base_path_local + "load_user_metadata/run.tsv"] )
                input[0] = ch_tsv.collect()
                input[1] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
}
